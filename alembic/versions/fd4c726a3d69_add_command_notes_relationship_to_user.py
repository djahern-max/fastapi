"""add command_notes relationship to user

Revision ID: fd4c726a3d69
Revises: a6d260fcf2c3
Create Date: 2024-11-02 08:17:31.377905

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fd4c726a3d69'
down_revision: Union[str, None] = 'a6d260fcf2c3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('command_notes', sa.Column('user_id', sa.Integer(), nullable=False))
    op.alter_column('command_notes', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_foreign_key(None, 'command_notes', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    # op.create_unique_constraint('unique_vote', 'votes', ['user_id', 'post_id'])  # Comment this line
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_constraint('unique_vote', 'votes', type_='unique')  # Comment this line
    op.drop_constraint(None, 'command_notes', type_='foreignkey')
    op.alter_column('command_notes', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('command_notes', 'user_id')
    # ### end Alembic commands ###